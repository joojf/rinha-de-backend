worker_processes  1;
worker_rlimit_nofile 65535;

events { 
  worker_connections  4096;
  use epoll;
  multi_accept on;
}

http {
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 5s;
  keepalive_requests 10000;
  
  # Minimal buffering for ultra-low latency
  proxy_buffering off;
  proxy_request_buffering off;
  
  upstream app_pool {
    # Não derruba upstream por falha rápida; confia nos timeouts abaixo
    server app1:9999 max_fails=0 weight=1;
    server app2:9999 max_fails=0 weight=1;
    keepalive 256;
    keepalive_requests 10000;
    keepalive_time 5s;
  }

  server {
    listen 9999 backlog=8192 reuseport;
    
    # Ultra-fast location block
    location / {
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_connect_timeout 50ms;
      proxy_send_timeout 100ms;
      proxy_read_timeout 120ms;
      proxy_pass http://app_pool;
    }

    # Summary pode varrer janelas maiores no Redis; dar uma margem maior
    location = /payments-summary {
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_connect_timeout 100ms;
      proxy_send_timeout 200ms;
      proxy_read_timeout 1500ms;
      proxy_pass http://app_pool;
    }
  }
}

